type ccci_mdinit, domain;
type ccci_mdinit_exec, exec_type, file_type;

init_daemon_domain(ccci_mdinit)
allow ccci_mdinit ccci_mdinit_exec:file { read open getattr execute execute_no_trans};
allow ccci_mdinit ccci_monitor_device:chr_file { rw_file_perms };
allow ccci_mdinit nvram_data_file:dir { create setattr rw_dir_perms };
allow ccci_mdinit sysfs:file { rw_file_perms };
allow ccci_mdinit nvram_data_file:file { create setattr rw_file_perms };
allow ccci_mdinit property_socket:sock_file { rw_file_perms };
allow ccci_mdinit init:unix_stream_socket connectto;
allow ccci_mdinit ctl_default_prop:property_service set;
allow ccci_mdinit ctl_rildaemon_prop:property_service set;
allow ccci_mdinit nvram_device:chr_file rw_file_perms;
allow ccci_mdinit nvram_device:blk_file {read write open };
allow ccci_mdinit protect_f_data_file:dir rw_dir_perms;
allow ccci_mdinit protect_f_data_file:file create_file_perms;
allow ccci_mdinit protect_s_data_file:dir rw_dir_perms;
allow ccci_mdinit protect_s_data_file:file create_file_perms;
allow ccci_mdinit platformblk_device:blk_file { read write open };
allow ccci_mdinit proc:file { read open ioctl };

allow ccci_mdinit bt_ver_cfg:file { read write getattr open };
allow ccci_mdinit misc_device:chr_file { read write open };
allow ccci_mdinit misc_sd_device:chr_file { read open };
allow ccci_mdinit preloader_device:chr_file { read open };
